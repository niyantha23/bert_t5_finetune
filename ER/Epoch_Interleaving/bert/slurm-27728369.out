==========================================
SLURM_JOB_ID = 27728369
SLURM_JOB_NODELIST = b10-11
TMPDIR = /tmp/SLURM_27728369
==========================================
Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
/home1/vedanth/.local/lib/python3.11/site-packages/transformers/tokenization_utils_base.py:2834: FutureWarning: The `pad_to_max_length` argument is deprecated and will be removed in a future version, use `padding=True` or `padding='longest'` to pad to the longest sequence in the batch, or use `padding='max_length'` to pad to a max length. In this case, you can give a specific length with `max_length` (e.g. `max_length=45`) or leave max_length to None to pad to the maximal input size of the model (e.g. 512 for Bert).
  warnings.warn(
/scratch1/vedanth/bert_t5_finetune/ER/Epoch_Interleaving/bert/eval.py:108: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model = torch.load(model_name)
cuda:0
Running Eval: French
Model loaded
  0%|          | 0/79 [00:00<?, ?it/s]  1%|▏         | 1/79 [00:00<01:06,  1.17it/s]  3%|▎         | 2/79 [00:01<00:47,  1.61it/s]  4%|▍         | 3/79 [00:01<00:41,  1.83it/s]  5%|▌         | 4/79 [00:02<00:38,  1.96it/s]  6%|▋         | 5/79 [00:02<00:36,  2.04it/s]  8%|▊         | 6/79 [00:03<00:34,  2.09it/s]  9%|▉         | 7/79 [00:03<00:33,  2.12it/s] 10%|█         | 8/79 [00:04<00:33,  2.14it/s] 11%|█▏        | 9/79 [00:04<00:32,  2.16it/s] 13%|█▎        | 10/79 [00:04<00:31,  2.17it/s] 14%|█▍        | 11/79 [00:05<00:31,  2.17it/s] 15%|█▌        | 12/79 [00:05<00:30,  2.18it/s] 16%|█▋        | 13/79 [00:06<00:30,  2.18it/s] 18%|█▊        | 14/79 [00:06<00:29,  2.19it/s] 19%|█▉        | 15/79 [00:07<00:29,  2.19it/s] 20%|██        | 16/79 [00:07<00:28,  2.19it/s] 22%|██▏       | 17/79 [00:08<00:28,  2.19it/s] 23%|██▎       | 18/79 [00:08<00:27,  2.19it/s] 24%|██▍       | 19/79 [00:09<00:27,  2.19it/s] 25%|██▌       | 20/79 [00:09<00:26,  2.19it/s] 27%|██▋       | 21/79 [00:09<00:26,  2.19it/s] 28%|██▊       | 22/79 [00:10<00:26,  2.19it/s] 29%|██▉       | 23/79 [00:10<00:25,  2.18it/s] 30%|███       | 24/79 [00:11<00:25,  2.18it/s] 32%|███▏      | 25/79 [00:11<00:24,  2.18it/s] 33%|███▎      | 26/79 [00:12<00:24,  2.18it/s] 34%|███▍      | 27/79 [00:12<00:23,  2.18it/s] 35%|███▌      | 28/79 [00:13<00:23,  2.18it/s] 37%|███▋      | 29/79 [00:13<00:22,  2.18it/s] 38%|███▊      | 30/79 [00:14<00:22,  2.18it/s] 39%|███▉      | 31/79 [00:14<00:22,  2.18it/s] 41%|████      | 32/79 [00:15<00:21,  2.18it/s] 42%|████▏     | 33/79 [00:15<00:21,  2.18it/s] 43%|████▎     | 34/79 [00:15<00:20,  2.18it/s] 44%|████▍     | 35/79 [00:16<00:20,  2.18it/s] 46%|████▌     | 36/79 [00:16<00:19,  2.18it/s] 47%|████▋     | 37/79 [00:17<00:19,  2.18it/s] 48%|████▊     | 38/79 [00:17<00:18,  2.18it/s] 49%|████▉     | 39/79 [00:18<00:18,  2.18it/s] 51%|█████     | 40/79 [00:18<00:17,  2.18it/s] 52%|█████▏    | 41/79 [00:19<00:17,  2.18it/s] 53%|█████▎    | 42/79 [00:19<00:17,  2.18it/s] 54%|█████▍    | 43/79 [00:20<00:16,  2.18it/s] 56%|█████▌    | 44/79 [00:20<00:16,  2.18it/s] 57%|█████▋    | 45/79 [00:21<00:15,  2.18it/s] 58%|█████▊    | 46/79 [00:21<00:15,  2.18it/s] 59%|█████▉    | 47/79 [00:21<00:14,  2.18it/s] 61%|██████    | 48/79 [00:22<00:14,  2.18it/s] 62%|██████▏   | 49/79 [00:22<00:13,  2.18it/s] 63%|██████▎   | 50/79 [00:23<00:13,  2.18it/s] 65%|██████▍   | 51/79 [00:23<00:12,  2.18it/s] 66%|██████▌   | 52/79 [00:24<00:12,  2.18it/s] 67%|██████▋   | 53/79 [00:24<00:11,  2.18it/s] 68%|██████▊   | 54/79 [00:25<00:11,  2.18it/s] 70%|██████▉   | 55/79 [00:25<00:11,  2.18it/s] 71%|███████   | 56/79 [00:26<00:10,  2.18it/s] 72%|███████▏  | 57/79 [00:26<00:10,  2.18it/s] 73%|███████▎  | 58/79 [00:26<00:09,  2.18it/s] 75%|███████▍  | 59/79 [00:27<00:09,  2.18it/s] 76%|███████▌  | 60/79 [00:27<00:08,  2.18it/s] 77%|███████▋  | 61/79 [00:28<00:08,  2.18it/s] 78%|███████▊  | 62/79 [00:28<00:07,  2.18it/s] 80%|███████▉  | 63/79 [00:29<00:07,  2.18it/s] 81%|████████  | 64/79 [00:29<00:06,  2.18it/s] 82%|████████▏ | 65/79 [00:30<00:06,  2.18it/s] 84%|████████▎ | 66/79 [00:30<00:05,  2.18it/s] 85%|████████▍ | 67/79 [00:31<00:05,  2.18it/s] 86%|████████▌ | 68/79 [00:31<00:05,  2.18it/s] 87%|████████▋ | 69/79 [00:32<00:04,  2.18it/s] 89%|████████▊ | 70/79 [00:32<00:04,  2.18it/s] 90%|████████▉ | 71/79 [00:32<00:03,  2.18it/s] 91%|█████████ | 72/79 [00:33<00:03,  2.18it/s] 92%|█████████▏| 73/79 [00:33<00:02,  2.18it/s] 94%|█████████▎| 74/79 [00:34<00:02,  2.18it/s] 95%|█████████▍| 75/79 [00:34<00:01,  2.18it/s] 96%|█████████▌| 76/79 [00:35<00:01,  2.18it/s] 97%|█████████▋| 77/79 [00:35<00:00,  2.18it/s] 99%|█████████▊| 78/79 [00:36<00:00,  2.18it/s]100%|██████████| 79/79 [00:36<00:00,  2.18it/s]
French TEST STATS: 0.7252768987341772
